
HelloWorld.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000194  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000140  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000194  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001c4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000204  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000081a  00000000  00000000  00000224  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000066f  00000000  00000000  00000a3e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000313  00000000  00000000  000010ad  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000013c0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003ae  00000000  00000000  000013e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001b0  00000000  00000000  00001792  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001942  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 9e 00 	jmp	0x13c	; 0x13c <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
	//DDRB |= (1<<DDB2);
	//DDRB |= (1<<DDB3);
	//DDRB |= (1<<DDB4);
	//DDRB |= (1<<DDB5);
	
	DDRB |= 0b00111111;
  80:	84 b1       	in	r24, 0x04	; 4
  82:	8f 63       	ori	r24, 0x3F	; 63
  84:	84 b9       	out	0x04, r24	; 4

	//Loop
	while (1)
	{
		// LED connected to PB0 on and wait
		PORTB |= (1<<PORTB0);
  86:	85 b1       	in	r24, 0x05	; 5
  88:	81 60       	ori	r24, 0x01	; 1
  8a:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  8c:	2f ef       	ldi	r18, 0xFF	; 255
  8e:	81 ee       	ldi	r24, 0xE1	; 225
  90:	94 e0       	ldi	r25, 0x04	; 4
  92:	21 50       	subi	r18, 0x01	; 1
  94:	80 40       	sbci	r24, 0x00	; 0
  96:	90 40       	sbci	r25, 0x00	; 0
  98:	e1 f7       	brne	.-8      	; 0x92 <main+0x12>
  9a:	00 c0       	rjmp	.+0      	; 0x9c <main+0x1c>
  9c:	00 00       	nop
		_delay_ms(100);
		// LED connected to PB0 off
		PORTB &= ~(1<<PORTB0);
  9e:	85 b1       	in	r24, 0x05	; 5
  a0:	8e 7f       	andi	r24, 0xFE	; 254
  a2:	85 b9       	out	0x05, r24	; 5
		
		// LED connected to PB1 on and wait
		PORTB |= (1<<PORTB1);
  a4:	85 b1       	in	r24, 0x05	; 5
  a6:	82 60       	ori	r24, 0x02	; 2
  a8:	85 b9       	out	0x05, r24	; 5
  aa:	2f ef       	ldi	r18, 0xFF	; 255
  ac:	81 ee       	ldi	r24, 0xE1	; 225
  ae:	94 e0       	ldi	r25, 0x04	; 4
  b0:	21 50       	subi	r18, 0x01	; 1
  b2:	80 40       	sbci	r24, 0x00	; 0
  b4:	90 40       	sbci	r25, 0x00	; 0
  b6:	e1 f7       	brne	.-8      	; 0xb0 <main+0x30>
  b8:	00 c0       	rjmp	.+0      	; 0xba <main+0x3a>
  ba:	00 00       	nop
		_delay_ms(100);
		// LED connected to PB1 off
		PORTB &= ~(1<<PORTB1);
  bc:	85 b1       	in	r24, 0x05	; 5
  be:	8d 7f       	andi	r24, 0xFD	; 253
  c0:	85 b9       	out	0x05, r24	; 5
		
		// LED connected to PB2 on and wait
		PORTB |= (1<<PORTB2);
  c2:	85 b1       	in	r24, 0x05	; 5
  c4:	84 60       	ori	r24, 0x04	; 4
  c6:	85 b9       	out	0x05, r24	; 5
  c8:	2f ef       	ldi	r18, 0xFF	; 255
  ca:	81 ee       	ldi	r24, 0xE1	; 225
  cc:	94 e0       	ldi	r25, 0x04	; 4
  ce:	21 50       	subi	r18, 0x01	; 1
  d0:	80 40       	sbci	r24, 0x00	; 0
  d2:	90 40       	sbci	r25, 0x00	; 0
  d4:	e1 f7       	brne	.-8      	; 0xce <main+0x4e>
  d6:	00 c0       	rjmp	.+0      	; 0xd8 <main+0x58>
  d8:	00 00       	nop
		_delay_ms(100);
		// LED connected to PB2 off
		PORTB &= ~(1<<PORTB2);
  da:	85 b1       	in	r24, 0x05	; 5
  dc:	8b 7f       	andi	r24, 0xFB	; 251
  de:	85 b9       	out	0x05, r24	; 5
		
		// LED connected to PB3 on and wait
		PORTB |= (1<<PORTB3);
  e0:	85 b1       	in	r24, 0x05	; 5
  e2:	88 60       	ori	r24, 0x08	; 8
  e4:	85 b9       	out	0x05, r24	; 5
  e6:	2f ef       	ldi	r18, 0xFF	; 255
  e8:	81 ee       	ldi	r24, 0xE1	; 225
  ea:	94 e0       	ldi	r25, 0x04	; 4
  ec:	21 50       	subi	r18, 0x01	; 1
  ee:	80 40       	sbci	r24, 0x00	; 0
  f0:	90 40       	sbci	r25, 0x00	; 0
  f2:	e1 f7       	brne	.-8      	; 0xec <main+0x6c>
  f4:	00 c0       	rjmp	.+0      	; 0xf6 <main+0x76>
  f6:	00 00       	nop
		_delay_ms(100);
		// LED connected to PB3 off
		PORTB &= ~(1<<PORTB3);
  f8:	85 b1       	in	r24, 0x05	; 5
  fa:	87 7f       	andi	r24, 0xF7	; 247
  fc:	85 b9       	out	0x05, r24	; 5
		
		// LED connected to PB4 on and wait
		PORTB |= (1<<PORTB4);
  fe:	85 b1       	in	r24, 0x05	; 5
 100:	80 61       	ori	r24, 0x10	; 16
 102:	85 b9       	out	0x05, r24	; 5
 104:	2f ef       	ldi	r18, 0xFF	; 255
 106:	81 ee       	ldi	r24, 0xE1	; 225
 108:	94 e0       	ldi	r25, 0x04	; 4
 10a:	21 50       	subi	r18, 0x01	; 1
 10c:	80 40       	sbci	r24, 0x00	; 0
 10e:	90 40       	sbci	r25, 0x00	; 0
 110:	e1 f7       	brne	.-8      	; 0x10a <main+0x8a>
 112:	00 c0       	rjmp	.+0      	; 0x114 <main+0x94>
 114:	00 00       	nop
		_delay_ms(100);
		// LED connected to PB4 off
		PORTB &= ~(1<<PORTB4);
 116:	85 b1       	in	r24, 0x05	; 5
 118:	8f 7e       	andi	r24, 0xEF	; 239
 11a:	85 b9       	out	0x05, r24	; 5
		
		// LED connected to PB5 on and wait
		PORTB |= (1<<PORTB5);
 11c:	85 b1       	in	r24, 0x05	; 5
 11e:	80 62       	ori	r24, 0x20	; 32
 120:	85 b9       	out	0x05, r24	; 5
 122:	2f ef       	ldi	r18, 0xFF	; 255
 124:	81 ee       	ldi	r24, 0xE1	; 225
 126:	94 e0       	ldi	r25, 0x04	; 4
 128:	21 50       	subi	r18, 0x01	; 1
 12a:	80 40       	sbci	r24, 0x00	; 0
 12c:	90 40       	sbci	r25, 0x00	; 0
 12e:	e1 f7       	brne	.-8      	; 0x128 <main+0xa8>
 130:	00 c0       	rjmp	.+0      	; 0x132 <main+0xb2>
 132:	00 00       	nop
		_delay_ms(100);
		// LED connected to PB5 off
		PORTB &= ~(1<<PORTB5);
 134:	85 b1       	in	r24, 0x05	; 5
 136:	8f 7d       	andi	r24, 0xDF	; 223
 138:	85 b9       	out	0x05, r24	; 5
 13a:	a5 cf       	rjmp	.-182    	; 0x86 <main+0x6>

0000013c <_exit>:
 13c:	f8 94       	cli

0000013e <__stop_program>:
 13e:	ff cf       	rjmp	.-2      	; 0x13e <__stop_program>
